{
  "@context": "dtmi:dtdl:context;2",
  "@id": "dtmi:io:tributech:Source;1",
  "@type": "Interface",
  "displayName": "Source",
  "contents": [
    {
      "@type": "Property",
      "name": "Id",
      "schema": "string",
      "writable": false,
      "displayName": "Id",
      "description": "Identifier of the source."
    },
    {
      "@type": "Property",
      "name": "Name",
      "schema": "string",
      "writable": true,
      "displayName": "Name",
      "description": "Human-readable name of the source."
    },
    {
      "@type": "Property",
      "name": "Type",
      "schema": {
        "@type": "Enum",
        "valueSchema": "string",
        "enumValues": [
          {
            "name": "generic",
            "displayName": "Generic Value Source",
            "enumValue": "generic-value-source"
          },
          {
            "name": "azure_simulated",
            "displayName": "Azure IoT Simulated Temperature Sensor",
            "enumValue": "azure-simulated-temperature"
          }
        ]
      },
      "writable": false,
      "displayName": "Type",
      "description": "Type of Value Source"
    },
    {
      "@type": "Property",  // this should really be optional with a default topic that is specified by the implementation of each Value Source
      "name": "Topic",
      "schema": "string",
      "writable": false,
      "displayName": "Topic",
      "description": "Topic on the message broker that is used by the Value Source"
    },
    {
      "@type": "Relationship",
      "name": "Streams",
      "minMultiplicity": 0,
      "maxMultiplicity": 10,
      "target": "dtmi:io:tributech:Stream;1",
      "displayName": "Streams",
      "description": "Contains all streams the given source."
    }
  ]
}